{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041A\\u0443\\u0440\\u0441\\u044B\\\\\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430\\\\\\u0421\\u043E\\u0432\\u0440\\u0435\\u043C\\u0435\\u043D\\u043D\\u044B\\u0439 React \\u0441 \\u041D\\u0443\\u043B\\u044F\\\\practice\\\\TodoList\\\\src\\\\components\\\\Tasks\\\\TaskInput\\\\TaskInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Button from '../../UI/Button/Button';\nimport './TaskInput.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskInput = props => {\n  _s();\n\n  const [inputText, setinputText] = useState('');\n\n  const taskInputChangeHandler = event => {\n    setinputText(event.target.value);\n  }; // Предотвращаем ввод пустой строки или пробелов\n  // в форму ввода задания\n\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n\n    if (inputText.trim().length === 0) {\n      return;\n    }\n\n    props.onAddTask(inputText);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\u0417\\u0430\\u0434\\u0430\\u0447\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: taskInputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0417\\u0430\\u0434\\u0430\\u0447\\u0443\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TaskInput, \"98wpufqEur7QyHd38hx/geed3hM=\");\n\n_c = TaskInput;\nexport default TaskInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskInput\");","map":{"version":3,"sources":["D:/Курсы/Новая папка/Современный React с Нуля/practice/TodoList/src/components/Tasks/TaskInput/TaskInput.js"],"names":["React","useState","Button","TaskInput","props","inputText","setinputText","taskInputChangeHandler","event","target","value","formSubmitHandler","preventDefault","trim","length","onAddTask"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,iBAAP;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMM,sBAAsB,GAAIC,KAAD,IAAW;AACtCF,IAAAA,YAAY,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;AACH,GAFD,CAHyB,CAOzB;AACA;;;AACA,QAAMC,iBAAiB,GAAIH,KAAD,IAAW;AACjCA,IAAAA,KAAK,CAACI,cAAN;;AACA,QAAIP,SAAS,CAACQ,IAAV,GAAiBC,MAAjB,KAA4B,CAAhC,EAAmC;AAC/B;AACH;;AACDV,IAAAA,KAAK,CAACW,SAAN,CAAgBV,SAAhB;AACH,GAND;;AAQA,sBACI;AAAM,IAAA,QAAQ,EAAEM,iBAAhB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAEJ;AAA7B;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CA1BD;;GAAMJ,S;;KAAAA,S;AA4BN,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport Button from '../../UI/Button/Button';\nimport './TaskInput.css';\n\nconst TaskInput = (props) => {\n    const [inputText, setinputText] = useState('');\n\n    const taskInputChangeHandler = (event) => {\n        setinputText(event.target.value);\n    };\n\n    // Предотвращаем ввод пустой строки или пробелов\n    // в форму ввода задания\n    const formSubmitHandler = (event) => {\n        event.preventDefault();\n        if (inputText.trim().length === 0) {\n            return;\n        }\n        props.onAddTask(inputText);\n    };\n\n    return (\n        <form onSubmit={formSubmitHandler}>\n            <div className='form-control'>\n                <label>Задачи</label>\n                <input type='text' onChange={taskInputChangeHandler} />\n            </div>\n            <Button type='submit'>Добавить Задачу</Button>\n        </form>\n    );\n};\n\nexport default TaskInput;\n"]},"metadata":{},"sourceType":"module"}